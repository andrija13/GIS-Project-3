@model VehicleViewModel
@{
    ViewData["Title"] = "Home Page";
    var listOfLayers = Enum.GetValues<Layer>().Select(x => new SelectListItem { Value = ((int)x).ToString(), Text = x.ToString().Replace('_',' ') });
    var listOfOperators = Enum.GetValues<SpatialOperator>().Select(x => new SelectListItem { Value = ((int)x).ToString(), Text = x.ToString().Replace('_', ' ') });
    var vehicleTypes = Enum.GetValues<VehicleType>().Select(x => new SelectListItem { Value = ((PostGISVehicleType)x).ToString(), Text = x.ToString().Replace('_', ' ') });
}

<div class="legendDiv col-sm-3">
    <div class="header">
        <h2>GIS Web App</h2>
    </div>
    <div class="filter">
        <div class="basicFilter">
            <label class="fTitle">Basic layer filter:</label>
            <div>
                @Html.DropDownList("BasicFilterLayer", listOfLayers, "Select layers", new { @class = "form-control"})
            </div>
            <div>
                @Html.DropDownList("BasicAttribute", new List<SelectListItem>(), "Select attribute", new { @class = "form-control"})
            </div>
            <div>
                <input class="form-control" id="basicFilterCondition" placeholder="Type a condition..." />
                <label style="font-size:8pt;padding: 0.5rem 0.5rem 0 0.5rem;width: 100%; color: #7E819D;">
                    Allowed operators: =,&lt,&gt,&gt=,&lt=, LIKE, IN, NOT
                    <br />
                    Example: LIKE '%Александар%'
                </label>
            </div>
            <div>
                <button type="button" class="btn btn-primary btn-sm" id="btnBasicFilter" onclick="basicSearch()">Search</button>
                <button type="button" class="btn btn-outline-danger btn-sm" id="btnResetBasicFilter" onclick="resetBasicSearch()">Reset</button>
            </div>
        </div>
        <div class="spatialFilter">
            <label class="fTitle">Spatial layer filter:</label>
            <div>
                @Html.DropDownList("SpatialLeftLayer", listOfLayers, "Select first layers", new { @class = "form-control"})
            </div>
            <div class="raw" style="display:flex;">
                @Html.DropDownList("SpatialOperator", listOfOperators, "Select operator", new { @class = "form-control"})
                <input class="form-control" type="number" min="0" id="spatialDistance" placeholder="Distance (in meter)" style="display:none;"/>
            </div>
            <div>
                @Html.DropDownList("SpatialRightLayer", listOfLayers, "Select second layers", new { @class = "form-control"})
            </div>
            <div>
                <button type="button" class="btn btn-primary btn-sm" id="btnSpatialFilter" onclick="spatialSearch()">Search</button>
                <button type="button" class="btn btn-outline-danger btn-sm" id="btnResetSpatialFilter" onclick="resetSpatialSearch()">Reset</button>
            </div>
        </div>
        <div class="spatialTemporalFilter">
            <div>
                <label class="fTitle">Find roads where:</label>
                <select class="form-control" id="temporalType">
                    <option value="-1" disabled hidden selected>Select type of query</option>
                    <option value="0">Number of car</option>
                    <option value="1">Average speed</option>
                </select>
            </div>
            <div class="raw" style="display:flex;">
                <select class="form-control" id="temporalOperator">
                    <option value="-1" disabled hidden selected>Select operator</option>
                    <option value="0">=</option>
                    <option value="1">&lt</option>
                    <option value="2">&gt</option>
                    <option value="3">&gt=</option>
                    <option value="4">&lt=</option>
                </select>
                <input class="form-control" type="number" id="temporalValue" placeholder="Type a value..."/>
            </div>
            <div class="raw" style="display:flex;">
                <input class="form-control time" type="number" id="temporalStartTime" min="0" max="2500" placeholder="Start time (min: 0)" />
                <input class="form-control time" type="number" id="temporalEndTime" min="0" max="2500" placeholder="End time (max: 2500)" />
            </div>
            <div>
                <button type="button" class="btn btn-primary btn-sm" id="btnTemporalFilter" onclick="temporalSearch()">Search</button>
                <button type="button" class="btn btn-outline-danger btn-sm" id="btnResetTemporalFilter" onclick="resetTemporalSearch()">Reset</button>
            </div>
        </div>
        <div class="trajectoriesFilter">
            <label class="fTitle">Find trajectories of vehicles:</label>
            <div>
                @Html.DropDownList("TypeOfVehicle", vehicleTypes, "Select type of vehicle", new { @class = "form-control"})
            </div>
            <div>
                @Html.DropDownList("VehicleId", new List<SelectListItem>(), "Select vehicle", new { @class = "form-control"})
            </div>
            <div class="raw" style="display:flex;">
                <input class="form-control time" type="number" id="trajectoryStartTime" min="0" max="2500" placeholder="Start time (min: 0)" />
                <input class="form-control time" type="number" id="trajectoryEndTime" min="0" max="2500" placeholder="End time (max: 2500)" />
            </div>
            <div>
                <button type="button" class="btn btn-primary btn-sm" id="btnTrajectoriesFilter" onclick="trajectoriesSearch()">Search</button>
                <button type="button" class="btn btn-outline-danger btn-sm" id="btnResetTrajectoriesFilter" onclick="resetTrajectoriesSearch()">Reset</button>
            </div>
        </div>
        <div class="trafficFilter">
            <label class="fTitle">Find popular area at:</label>
            <div class="raw" style="display:flex;">
                <input class="form-control" type="number" id="trafficStartTime" min="0" max="2500" placeholder="Enter time (min: 0, max: 2500)" />
            </div>
            <div>
                <button type="button" class="btn btn-primary btn-sm" id="btnTrafficFilter" onclick="trafficJamSearch()">Search</button>
                <button type="button" class="btn btn-outline-danger btn-sm" id="btnResetTrafficsFilter" onclick="resetTrafficJamSearch()">Reset</button>
            </div>
        </div>
    </div>
</div>
<div id="map" class="col-sm-9"></div>

<script>
    var allVehicle = @Html.Raw(Json.Serialize(Model.Vehicles));
</script>

